/vis/open OGL 600x600-0+0

# Use this open statement to create an OpenInventor view:
#/vis/open OI

# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE

# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile

# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors

/vis/drawVolume
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 0 0
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100

/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2

# (if too many tracks cause core dump => /tracking/storeTrajectory 0)

# Draw hits at end of event:
#/vis/scene/add/hits

# draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma

# drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true

# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true

# To select or override default colours (note: e+ is blue by default):
#/vis/modeling/trajectories/list
#/vis/modeling/trajectories/drawByParticleID-0/set e+ yellow

/vis/scene/endOfEventAction accumulate

/vis/set/textColour white
/vis/set/textLayout right
/vis/scene/add/text2D 0.9 -.9 24 ! ! XiD
# or
#/vis/scene/add/text2D 0 -.9 24 ! ! exampleB1

/vis/set/textLayout    # Revert to normal (left adjusted) layout
# /vis/set/textColour    # Revert to default text colour (blue)

/vis/scene/add/scale   # Simple scale line
/vis/scene/add/axes    # Simple axes: x=red, y=green, z=blue.
/vis/scene/add/eventID # Drawn at end of event
/vis/scene/add/date    # Date stamp
#/vis/scene/add/logo2D  # Simple logo
#/vis/scene/add/logo    # 3D logo

/vis/set/colour white
/vis/set/lineWidth 2
/vis/scene/add/frame   # Simple frame around the view
/vis/set/colour        # Revert to default colour (white)
/vis/set/lineWidth     # Revert to default line width (1.)

# Attach text to one edge of Shape1, with a small, fixed offset
#/vis/scene/add/text 0 6 -4 cm 18 4 4 Shape1
# Attach text to one corner of Shape2, with a small, fixed offset
#/vis/scene/add/text 6 7 10 cm 18 4 4 Shape2

# Make the "World" box invisible
/vis/geometry/set/visibility World 0 false

# "Envelope" is transparent blue to represent water
#/vis/geometry/set/colour Envelope 0 0 0 1 .3
#/vis/viewer/set/style surface
#/vis/viewer/set/hiddenMarker true
/vis/viewer/set/viewpointThetaPhi 120 150

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings

# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
